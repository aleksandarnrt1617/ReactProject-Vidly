{"version":3,"sources":["services/logService.js","services/httpService.js","services/genreService.js","services/movieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/filter.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/MoviesTable.jsx","components/navbar.jsx","components/common/input.jsx","components/common/search.jsx","components/movie.jsx","components/customers.jsx","components/rentals.jsx","components/notfound.jsx","components/common/inputList.jsx","components/common/form.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/movieForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","Raven","config","release","environment","install","log","error","captureException","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getGenres","a","http","apiUrl","data","movieUrl","id","getMovies","getMovie","saveMovie","movie","_id","body","deleteMovie","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","console","className","map","page","key","onClick","paginate","items","pageNumber","startIndex","slice","take","value","Filter","onItemSelected","textProperty","selectedItem","valueProperty","item","defaultProps","Like","style","isLiked","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","Table","email","password","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","Link","to","title","liked","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","NavBar","NavLink","Fragment","name","Input","rest","htmlFor","Search","Change","class","onChange","e","currentTarget","type","placeholder","Movie","mov","state","genres","selectedGenre","search","movieDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSort","handleChange","query","getPagedData","AllMovies","filtered","toLowerCase","startsWith","genre","orderBy","totalCount","length","Customers","Rentals","NotFound","InputList","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","input","errorMessage","disabled","LoginForm","username","string","required","location","window","from","pathname","Redirect","onSubmit","renderInput","renderButton","register","RegisterForm","min","userService","MovieForm","genreId","numberInStock","dailyRentalRate","optional","number","max","history","movieId","match","params","undefined","alert","mapToViewModel","replace","pupulateGenres","pupulateMovies","renderInputList","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3c611cf0.chunk.js","sourcesContent":["import Raven from \"raven-js\";\n\nfunction init() {\n  Raven.config(\"https://1621ebd9054e4e349d2dd9c2bdb18ce1@o430947.ingest.sentry.io/5380591\", {\n    release: \"1-0-0\",\n    environment: \"development-test\"\n  }).install();\n}\n\nfunction log(error) {\n  Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log\n};","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\n\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    // console.log(\"logging the error\", error);\n    // alert(\"An unexpected error occurred.\");\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};","import http from './httpService'\r\nimport { apiUrl } from \"./config.json\"\r\n\r\n\r\nexport async function getGenres() {\r\n    const { data } = await http.get(apiUrl + \"/genres\")\r\n    return data;\r\n}\r\nexport async function getGenre(id) {\r\n    const { data } = await http.get(apiUrl + \"/genres/\" + id)\r\n    return data;\r\n}","import http from \"./httpService\"\r\nimport { getGenres, getGenre } from \"./genreService\"\r\nimport { apiUrl } from \"./config.json\"\r\n\r\nconst apiEndpoint = \"/movies\"\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`\r\n\r\n}\r\n\r\nexport async function getMovies() {\r\n    const { data } = await http.get(apiEndpoint);\r\n    return data;\r\n}\r\n\r\nexport async function getMovie(id) {\r\n    const { data } = await http.get(movieUrl(id));\r\n    return data;\r\n}\r\n\r\nexport async function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n\r\n    return http.put(apiEndpoint, movie);\r\n}\r\n\r\nexport async function deleteMovie(id) {\r\n    const { data } = await http.delete(movieUrl(id))\r\n    return data;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  const pages = _.range(1, pagesCount + 1);\r\n  console.log(currentPage);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n            <p className='page-link' onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React, { Component } from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  const { items, onItemSelected, textProperty, selectedItem, valueProperty } = props;\r\n  return (\r\n    <ul className='list-group'>\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n          onClick={() => onItemSelected(item)}>\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Like = (props) => {\r\n  let style = props.isLiked === false ? \"fa fa-heart-o\" : \"fa fa-heart\";\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      className={style}\r\n      aria-hidden=\"true\"\r\n      onClick={props.onClick}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className='fa fa-sort-asc'></i>;\r\n    return <i className='fa fa-sort-desc'></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className='clickable'\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}>\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./like\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport { stubFalse } from \"lodash\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className='table'>\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import http from \"./httpService\"\r\nimport { apiUrl } from \"./config.json\"\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nconst apiEndpoint = \"/auth\"\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem('token');\r\n        return jwtDecode(jwt)\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n\r\n}\r\n\r\nexport default {\r\n    login, loginWithJwt, logout, getCurrentUser, getJwt\r\n}","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>,\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (item) => (\r\n        <Like isLiked={item.liked} onClick={() => this.props.onLike(item)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (item) => (\r\n      <button\r\n        className='btn btn-danger'\r\n        onClick={() => {\r\n          this.props.onDelete(item._id);\r\n        }}>\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onDelete, onLike, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n      <NavLink className='navbar-brand' to='/'>\r\n        Vidly\r\n      </NavLink>\r\n      <div className='collapse navbar-collapse' id='navbarNav'>\r\n        <ul className='navbar-nav'>\r\n          <li className='nav-item'>\r\n            <NavLink className='nav-link' to='/movies'>\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <NavLink className='nav-link' to='/customers'>\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <NavLink className='nav-link' to='/rentals'>\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/login'>\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/register'>\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/profile'>\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/logout'>\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className='form-control' />\r\n      {error && <div className='alert alert-danger'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Search = ({ value, Change }) => {\r\n  return (\r\n    <div class='input-group mb-3'>\r\n      <input\r\n        value={value}\r\n        onChange={(e) => Change(e.currentTarget.value)}\r\n        type='text'\r\n        class='form-control'\r\n        placeholder='Search'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { getMovie, getMovies, saveMovie, deleteMovie } from \"../services/movieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Filter from \"./common/filter\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"./navbar\";\r\nimport _ from \"lodash\";\r\nimport Input from \"./common/input\";\r\nimport Search from \"./common/search\";\r\nimport { async } from \"./../services/genreService\";\r\nclass Movie extends Component {\r\n  mov = getMovies();\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    selectedGenre: \"\",\r\n    search: \"\",\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...(await getGenres())];\r\n\r\n    this.setState({ movies: await getMovies(), genres });\r\n  }\r\n\r\n  movieDelete = async (id) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = this.state.movies.filter((m) => m._id !== id);\r\n\r\n    this.setState({ movies: movies });\r\n    try {\r\n      await deleteMovie(id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) toast.error(\"Something went wrong\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handleLike = (movie) => {\r\n    console.log(\"Liked\");\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n  handleGenreSelect = (filter) => {\r\n    this.setState({\r\n      selectedGenre: filter,\r\n      currentPage: 1,\r\n      search: \"\",\r\n      movies: getMovies(),\r\n    });\r\n  };\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  handleChange = (query) => {\r\n    this.setState({\r\n      selectedGenre: \"All Genres\",\r\n      search: query,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      search,\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      movies: AllMovies,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    let filtered = AllMovies;\r\n    if (search)\r\n      filtered = AllMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(search.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = AllMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    let movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className='row my-5'>\r\n          <div className='col-3'>\r\n            <Filter\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              onItemSelected={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            {user && (\r\n              <Link className='btn btn-primary' to='/movies/new'>\r\n                New Movie\r\n              </Link>\r\n            )}\r\n            <p>Number of Movies {totalCount}</p>\r\n            <Search value={this.state.search} Change={this.handleChange} />\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.movieDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              currentPage={currentPage}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst Customers = (props) => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = (props) => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (props) => {\r\n  return <h1>404 error</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nconst InputList = ({ name, label, error, items, ...rest }) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className='custom-select'>\r\n        <option></option>\r\n        {items.map((item) => (\r\n          <option value={item._id} key={item._id}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className='alert alert-danger'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputList;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport InputList from \"./inputList\";\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className='btn btn-primary'>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n  renderInputList(name, label, items) {\r\n    console.log(items);\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <InputList\r\n        items={items}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\"\r\nimport { getGenres, getGenre } from \"./genreService\"\r\nimport { apiUrl } from \"./config.json\"\r\n\r\nconst apiEndpoint = \"/users\"\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status >= 400 && ex.response.status <= 500) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { deleteMovie, getMovie, getMovies, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string().optional(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number().min(0).max(100).required().label(\"Number in stock\"),\r\n    dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Daily rental rate\"),\r\n  };\r\n\r\n  async pupulateGenres() {\r\n    const genres = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n  async pupulateMovies() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\" || movieId === undefined) return;\r\n      alert(\"Ass\");\r\n      const movie = await getMovie(movieId);\r\n\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.pupulateGenres();\r\n    await this.pupulateMovies();\r\n    // if (!this.props.match.params.id) return;\r\n    // if (getMovie(this.props.match.params.id) === undefined) {\r\n    //   this.props.history.replace(\"/not-found\");\r\n    // } else {\r\n    //   console.log(getMovie(this.props.match.params.id));\r\n    //   const { _id, title, genre, numberInStock, dailyRentalRate } = getMovie(\r\n    //     this.props.match.params.id\r\n    //   );\r\n    //   console.log(\"Ass\", dailyRentalRate);\r\n    //   this.setState({\r\n    //     data: { _id, title, genre: genre.name, numberInStock, dailyRentalRate },\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderInputList(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport MovieForm from \"./../movieForm\";\r\nimport auth from \"../../services/authService\";\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movie from \"./components/movie\"\nimport NavBar from \"./components/navbar\";\nimport Customers from './components/customers'\nimport Rentals from './components/rentals'\nimport MovieDetail from './components/common/movieDetail';\nimport NotFound from './components/notfound';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport MovieForm from './components/movieForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport \"react-toastify/dist/ReactToastify.css\"\nimport './App.css';\nimport auth from './services/authService';\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n\n  render() {\n\n    const { user } = this.state\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path='/not-found' component={NotFound} />\n            <Route path=\"/\" exact render={props => <Movie {...props} user={this.state.user} />} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconsole.log(process.env);\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}